{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"star",
				"start_location"
			],
			[
				"rend",
				"render_overlay"
			],
			[
				"st",
				"start_position"
			],
			[
				"pro",
				"project_position"
			],
			[
				"assets",
				"assets_loaded"
			],
			[
				"mat4_s",
				"mat4_stack"
			],
			[
				"LOG",
				"LOG_LEVEL"
			],
			[
				"world",
				"world_size"
			],
			[
				"top_",
				"top_half_surface_distance"
			],
			[
				"zoom",
				"zoom_fraction"
			],
			[
				"pixel",
				"pixel_projection_matrix"
			],
			[
				"pixel_",
				"pixel_projection_matrix"
			],
			[
				"view",
				"view_matrix"
			],
			[
				"projection",
				"projection_matrix"
			],
			[
				"scl",
				"scale"
			],
			[
				"en",
				"entity"
			],
			[
				"sh",
				"shader"
			],
			[
				"in",
				"input"
			],
			[
				"yea",
				"year_ticker"
			],
			[
				"cim",
				"climate_data"
			],
			[
				"k",
				"key_down"
			],
			[
				"temp",
				"temperature"
			],
			[
				"di",
				"disc"
			],
			[
				"res",
				"result"
			],
			[
				"dis",
				"disc_alpha"
			],
			[
				"tex",
				"texture2D"
			],
			[
				"disc",
				"disc_target"
			],
			[
				"bin",
				"bind_render_target"
			],
			[
				"pos",
				"_position"
			],
			[
				"_Vec",
				"_Vec3"
			],
			[
				"target",
				"target_scale"
			],
			[
				"tar",
				"target_color"
			],
			[
				"ta",
				"target_color"
			],
			[
				"te",
				"temp_disc"
			],
			[
				"temp_",
				"temp_disc"
			],
			[
				"Vec",
				"Vec4"
			],
			[
				"_",
				"_Vec4"
			],
			[
				"e",
				"entity"
			],
			[
				"draw",
				"draw_text"
			],
			[
				"_v",
				"_Vec3"
			],
			[
				"gl",
				"gl_FragColor"
			],
			[
				"vec",
				"vec4"
			],
			[
				"ve",
				"vec3"
			],
			[
				"ker",
				"kerning_table_size"
			],
			[
				"num",
				"num_kerning_values"
			],
			[
				"gr",
				"group"
			],
			[
				"render_debug",
				"render_debug_draw"
			],
			[
				"inde",
				"index_buffer"
			],
			[
				"lin",
				"line_mesh"
			],
			[
				"clea",
				"clear_index_buffer"
			],
			[
				"ch",
				"charCodeAt"
			],
			[
				"nu",
				"num_kerning_pairs"
			],
			[
				"glyp",
				"glyph_stride"
			],
			[
				"b",
				"bounds_b"
			],
			[
				"bo",
				"bounds_t"
			],
			[
				"bounds",
				"bounds_l"
			],
			[
				"un",
				"unicode_end"
			],
			[
				"so",
				"sizeof"
			],
			[
				"de",
				"deleteBuffer"
			],
			[
				"mo",
				"mouse_pos"
			],
			[
				"scre",
				"screen_to_world"
			],
			[
				"r",
				"ratio"
			],
			[
				"Te",
				"TextureFormat"
			],
			[
				"im",
				"image_load_count"
			],
			[
				"siz",
				"size_image_grid"
			],
			[
				"t",
				"texture"
			],
			[
				"va",
				"value"
			],
			[
				"re",
				"rect"
			],
			[
				"set_vec",
				"set_vec3"
			],
			[
				"up",
				"update_entity"
			],
			[
				"selec",
				"selection_grid"
			],
			[
				"se",
				"selection_grid"
			],
			[
				"sel",
				"selection_root"
			],
			[
				"set_ve",
				"set_vec3"
			],
			[
				"t_",
				"t_end"
			],
			[
				"d",
				"dimension"
			],
			[
				"sheep",
				"sheep"
			],
			[
				"a",
				"alpha"
			],
			[
				"Tex",
				"TextureFormat"
			],
			[
				"me",
				"metric"
			],
			[
				"at",
				"atlas"
			],
			[
				"mes",
				"mesh"
			],
			[
				"m",
				"mesh"
			],
			[
				"bind_",
				"bind_mesh"
			],
			[
				"ib",
				"ib_data"
			],
			[
				"vb_",
				"vb_data"
			],
			[
				"vb",
				"vb_size"
			],
			[
				"rad",
				"read_f32"
			],
			[
				"att",
				"attr_size"
			],
			[
				"Ve",
				"VertexAttribute"
			],
			[
				"s",
				"sheep"
			],
			[
				"sheep_",
				"sheep_anim"
			],
			[
				"sheep_a",
				"sheep_anim"
			],
			[
				"g",
				"g_count"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"fon",
				"font-size"
			],
			[
				"bor",
				"border-box"
			],
			[
				"DE",
				"DepthMode"
			],
			[
				"ca",
				"camera"
			],
			[
				"set",
				"set_uniform"
			],
			[
				"border-",
				"border-top"
			],
			[
				"font",
				"font-size"
			],
			[
				"pad",
				"padding-bottom"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"n",
				"none"
			],
			[
				"font-",
				"font-size"
			],
			[
				"is",
				"is_touch_device"
			],
			[
				"w",
				"world_matrix"
			],
			[
				"y",
				"y_label"
			],
			[
				"p",
				"position"
			],
			[
				"uv",
				"uv_height"
			],
			[
				"uv_w",
				"uv_width"
			],
			[
				"uv_",
				"uv_h"
			],
			[
				"ro",
				"row_heught"
			],
			[
				"row",
				"row_width"
			],
			[
				"sdf",
				"sdf_img"
			],
			[
				"mesh",
				"meshes"
			],
			[
				"pre",
				"previous_screen"
			],
			[
				"c",
				"current_screen"
			],
			[
				"v3",
				"v3_index"
			],
			[
				"nor",
				"normal"
			],
			[
				"no",
				"normal"
			],
			[
				"norm",
				"normal"
			],
			[
				"v",
				"v_direction"
			],
			[
				"cmer",
				"camera_mesh"
			],
			[
				"camer",
				"camera"
			],
			[
				"caer",
				"camera_mesh"
			],
			[
				"camera",
				"camera_mesh"
			]
		]
	},
	"buffers":
	[
		{
			"file": "build.bat",
			"settings":
			{
				"buffer_size": 23,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/svg_build.py",
			"settings":
			{
				"buffer_size": 472,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/html/animation.html",
			"settings":
			{
				"buffer_size": 374,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/js/animation.js",
			"settings":
			{
				"buffer_size": 2547,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/style.css",
			"settings":
			{
				"buffer_size": 392,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nC:\\webdev\\back-to-school\\gareth>python lib/svg_build.py \nassets/svg/flask.svg\nassets/html/animation.html\nassets/compiled_svg/flask.svg\n\n[Finished in 0.1s]",
			"settings":
			{
				"buffer_size": 155,
				"line_ending": "Windows",
				"name": "Build output",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 129.0,
		"last_filter": "Package Control: install",
		"selected_items":
		[
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"Package Control: dis",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control:d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"da",
				"DataConverter: to Python dict"
			],
			[
				"data",
				"DataConverter: to JSON"
			],
			[
				"preyy",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 520.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/webdev/back-to-school/gareth"
	],
	"file_history":
	[
		"/C/webdev/back-to-school/gareth/build/style.css",
		"/C/webdev/mograph/Phone/build/js/animation.js",
		"/C/webdev/traffic/src/glsl/avatar.glsl",
		"/C/webdev/traffic/build/css/style.css",
		"/C/webdev/traffic/src/html/index.html",
		"/C/webdev/traffic/src/js/timeline.js",
		"/C/webdev/traffic/src/js/data.js",
		"/C/webdev/traffic/traffic_parser.py",
		"/C/webdev/traffic/src/data/2016.csv",
		"/C/webdev/traffic/src/js/mat4.js",
		"/C/webdev/traffic/src/js/assets.js",
		"/C/webdev/traffic/src/js/app.js",
		"/C/webdev/traffic/src/js/quad.js",
		"/C/webdev/traffic/src/js/manifest.js",
		"/C/webdev/burst/src/glsl/components/sdf.glslc",
		"/C/webdev/traffic/build.bat",
		"/C/webdev/traffic/src/js/serialise.js",
		"/C/webdev/archive/launch/src/js/timeline.js",
		"/C/webdev/archive/launch/src/js/math.js",
		"/C/webdev/traffic/src/js/camera_locations.js",
		"/C/webdev/traffic/src/js/map.js",
		"/C/webdev/traffic/build.py",
		"/C/webdev/alphago/build.bat",
		"/C/webdev/traffic/src/js/shader.js",
		"/C/webdev/alphago/src/js/main.js",
		"/C/webdev/traffic/camera_locations.js",
		"/C/webdev/air/build.py",
		"/C/webdev/traffic/2016.csv",
		"/C/webdev/back-to-school/build/index.html",
		"/C/webdev/back-to-school/build/style.css",
		"/C/Users/garet/Downloads/2016.csv",
		"/C/webdev/traffic/parser.py",
		"/C/Users/garet/Downloads/Camera Locations.csv",
		"/C/Users/garet/Dropbox/alphago/src/app.cpp",
		"/C/webdev/alphago/src/glsl/node.glsl",
		"/C/webdev/alphago/src/glsl/board.glsl",
		"/C/webdev/alphago/src/js/webgl.js",
		"/C/webdev/alphago/parser.py",
		"/C/webdev/alphago/src/js/go.js",
		"/C/webdev/alphago/src/js/mesh.js",
		"/C/webdev/alphago/src/data/data.txt",
		"/C/webdev/alphago/src/js/math.js",
		"/C/webdev/alphago/src/js/app.js",
		"/C/webdev/alphago/src/js/orbit_camera.js",
		"/C/webdev/air/src/js/webgl.js",
		"/C/dev/gblib/src/webgl.cpp",
		"/C/Users/garet/Dropbox/alphago/src/alphago.cpp",
		"/C/webdev/alphago/src/js/input.js",
		"/C/webdev/alphago/src/js/camera.js",
		"/C/webdev/alphago/src/glsl/debug.glsl",
		"/C/dev/gblib/src/camera.cpp",
		"/C/webdev/alphago/src/glsl/components/lambert.glslc",
		"/C/webdev/alphago/src/glsl/basic.glsl",
		"/C/webdev/alphago/src/html/index.html",
		"/C/webdev/alphago/src/js/entity.js",
		"/C/webdev/alphago/src/js/view.js",
		"/C/webdev/alphago/src/js/quad.js",
		"/C/webdev/alphago/src/js/assets.js",
		"/C/webdev/alphago/src/js/serialise.js",
		"/C/webdev/alphago/src/js/manifest.js",
		"/C/webdev/alphago/src/js/projection.js",
		"/C/webdev/alphago/src/js/vector.js",
		"/C/webdev/alphago/src/js/shader.js",
		"/C/webdev/alphago/src/js/texture.js",
		"/C/Users/garet/Dropbox/alphago/src/games.cpp",
		"/C/webdev/alphago/asset_compiler.py",
		"/C/webdev/air/src/js/serialise.js",
		"/C/webdev/alphago/build.py",
		"/C/Users/garet/Dropbox/alphago/build.sh",
		"/C/webdev/air/src/glsl/line_flat.glsl",
		"/C/webdev/air/src/glsl/line.glsl",
		"/C/webdev/air/src/js/data.js",
		"/C/webdev/air/src/js/map.js",
		"/C/webdev/air/src/html/index.html",
		"/C/webdev/air/build/css/style.css",
		"/C/Users/garet/Desktop/plume.txt",
		"/C/webdev/air/src/js/app.js",
		"/C/webdev/air/src/glsl/avatar.glsl",
		"/C/webdev/air/src/glsl/graph.glsl",
		"/C/webdev/air/src/js/entity.js",
		"/C/webdev/air/src/js/manifest.js",
		"/C/webdev/air/src/glsl/components/colour_normals.glslc",
		"/C/webdev/air/src/js/line_mesh3D.js",
		"/C/webdev/air/src/glsl/components/lambert.glslc",
		"/C/webdev/burst/src/js/camera.js",
		"/C/webdev/air/src/glsl/basic.glsl",
		"/C/webdev/air/src/glsl/debug.glsl",
		"/C/webdev/air/src/js/input.js",
		"/C/webdev/air/src/glsl/instance.glsl",
		"/C/webdev/air/src/js/time.js",
		"/C/webdev/air/src/js/gl_draw.js",
		"/C/webdev/gblib/src/python/io_export_webgl_scene.py",
		"/C/webdev/air/src/glsl/marker.glsl",
		"/C/webdev/air/src/glsl/draw.glsl",
		"/C/webdev/air/src/js/quad.js",
		"/C/webdev/burst/src/js/line_mesh3D.js",
		"/C/webdev/burst/src/glsl/components/lambert.glslc",
		"/C/webdev/burst/src/glsl/card.glsl",
		"/C/webdev/air/src/glsl/components/sdf.glslc",
		"/C/webdev/pages/DoubleJump.github.io/webgl-with-webassembly/light.css",
		"/C/webdev/air/src/js/texture.js",
		"/C/webdev/webgl/src/js/input.js",
		"/C/webdev/air/src/js/vector.js",
		"/C/webdev/air/src/js/deck.js",
		"/C/webdev/deck/src/js/math.js",
		"/C/webdev/deck/src/js/entity.js",
		"/C/webdev/deck/src/js/manifest.js",
		"/C/webdev/deck/src/js/projection.js",
		"/C/webdev/deck/src/js/mesh.js",
		"/C/webdev/deck/src/glsl/basic.glsl",
		"/C/webdev/deck/src/glsl/flat.glsl",
		"/C/webdev/deck/build/css/style.css",
		"/Users/gareth/Sites/deck/src/glsl/fog.glsl",
		"/Users/gareth/Downloads/hrd/src/glsl/instance.glsl",
		"/Users/gareth/Sites/deck/src/glsl/grading.glsl",
		"/Users/gareth/Sites/deck/src/js/manifest.js",
		"/Users/gareth/Sites/deck/src/js/quad.js",
		"/Users/gareth/Sites/svg/build.sh",
		"/Users/gareth/Sites/deck/src/glsl/colour_grading.glsl",
		"/Users/gareth/Sites/deck/src/js/vector.js",
		"/Users/gareth/Sites/deck/build/css/style.css",
		"/Users/gareth/Sites/deck/src/html/index.html",
		"/Users/gareth/Sites/deck/src/js/mat4.js",
		"/Users/gareth/Desktop/serverless-partner-logo.svg",
		"/Users/gareth/Downloads/test.svg",
		"/Users/gareth/Sites/deck/build.sh",
		"/Users/gareth/Sites/deck/src/js/math.js",
		"/Users/gareth/Documents/Design/Cauldron/Frozen Launch Campaign/Cauldron Frozen Recipes/Cauldron Vegan Burger on dark rye with avocado and broad bean puree.  topped with mango salsa.docx"
	],
	"find":
	{
		"height": 51.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"quad",
			"_BR",
			"40201",
			"t",
			"pi",
			"t",
			"pi",
			"t",
			"e",
			"d",
			"c",
			"b",
			"a",
			"W",
			"B",
			";",
			"BlendMode",
			"app.js:10",
			"app.js:10 ",
			"p(",
			"+ ",
			"gl.",
			"radians",
			"project_to_clipspace",
			"project(vec4",
			"project_merca",
			"PROJECT_LINEAR",
			"project_position(",
			"log",
			"print",
			"a33",
			"a32",
			"a31",
			"a30",
			"a23",
			"a22",
			"a21",
			"a20",
			"a13",
			"a14",
			"a12",
			"a11",
			"a10",
			"a03",
			"a02",
			"a01",
			"a00",
			"out",
			"PI_2",
			"PI_4",
			"mat4_mul",
			"PI_OVER_TWO",
			"PI_4",
			"a23",
			"a22",
			"a21",
			"a20",
			"a13",
			"a12",
			"a11",
			"a10",
			"a03",
			"a02",
			"a01",
			"a00",
			"out",
			"bind_tex",
			"°C",
			"app.text",
			"quad_index",
			"autoFrame",
			"\t\n",
			"autoFrame",
			"autoframe",
			"update_mesh",
			"bind_tex",
			"}\n",
			"state",
			"target_type",
			"\t\n",
			"state",
			"dark",
			"-1",
			"main",
			"BlendMode",
			"enable_bac",
			"vec3_tmp",
			"quat_tmp",
			"}\n",
			"vec_tmp",
			"color_set",
			"vec3_tmp",
			"dirB",
			"dirA",
			"nextScreen",
			"previousScreen",
			"currentScreen",
			"currentProjected",
			"nextProjected",
			"previousProjected",
			"previousProject",
			"previousProjection",
			"lm.points",
			"v3.set",
			"mat4_tmp",
			"vec3_tmp",
			"quat_set",
			"pop()",
			"vec_tmp",
			"quat_tmp",
			"INCLUDE",
			"mat4_tmp",
			"mat3_tmp",
			"mat3_tmp()",
			"vec3_tmp",
			"content",
			"choose",
			"class-name",
			"\n    ",
			"h4",
			"whitespace",
			"Source",
			"offset",
			"bind_textre",
			"ASSERT",
			"assert",
			"set_viewport",
			"set_view"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"4",
			"3",
			"2",
			"1",
			"0",
			"1",
			"",
			"GL.getParameter(",
			"+ p(",
			"GL.",
			"log",
			"m[15]",
			"m[14]",
			"m[13]",
			"m[12]",
			"m[11]",
			"m[10]",
			"m[9]",
			"m[8]",
			"m[7]",
			"m[6]",
			"m[5]",
			"m[4]",
			"m[2]",
			"m[1]",
			"m[0]",
			"r",
			"m[11]",
			"m[10]",
			"m[9]",
			"m[8]",
			"m[7]",
			"m[6]",
			"m[5]",
			"m[4]",
			"m[3]",
			"m[2]",
			"m[1]",
			"m[0]",
			"m",
			",",
			"app.year",
			"app",
			"_Vec3",
			"_Vec4",
			"_Vec3",
			"set_vec4",
			"_Vec3",
			"B",
			"A",
			"next_screen",
			"previous_screen",
			"current_screen",
			"current_proj",
			"next_proj",
			"prev_proj",
			"p",
			"set_vec3",
			"_Mat4",
			"_Vec3",
			"vec4_set",
			"_Vec3",
			"_Vec4",
			"import",
			"_Mat4",
			"_Mat3",
			"_Vec3",
			"GL",
			"'",
			"r.",
			"function ",
			"TGL.",
			"LP.",
			"LP",
			"LRP",
			"LERPY.",
			"'",
			"Element",
			"'",
			"=",
			"c[0]",
			"a[0]",
			"lay",
			"stack",
			"_t",
			"[1]",
			"[0]",
			"[2]",
			"[1]",
			"[0]",
			"m[",
			"[2]",
			"[1]",
			"[0]",
			"[1]",
			"[0]",
			"[3]",
			"[2]",
			"[1]",
			"[0]",
			"gb",
			"webgl",
			"gb.",
			"gl",
			"onyx",
			"Onyx",
			"onyx",
			"_GL",
			"update_mode",
			"ctx",
			"context",
			"quad",
			"fp_precision",
			"IndexData",
			"VertData",
			"index_data",
			"vert_data",
			"rift",
			"camera",
			"1",
			"-z",
			"z",
			"-z",
			"z",
			"-z",
			"",
			"z",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "build.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23,
						"regions":
						{
						},
						"selection":
						[
							[
								23,
								23
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/svg_build.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 472,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "assets/html/animation.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 374,
						"regions":
						{
						},
						"selection":
						[
							[
								326,
								326
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "build/js/animation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2547,
						"regions":
						{
						},
						"selection":
						[
							[
								1339,
								1339
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1953.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "build/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 392,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 155,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 44.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.682291666667,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 184.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/JS.sublime-build",
	"project": "gareth.sublime-project",
	"replace":
	{
		"height": 96.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"style",
				"build\\style.css"
			],
			[
				"styl",
				"build\\style.css"
			],
			[
				"anim",
				"build\\js\\animation.js"
			],
			[
				"bui",
				"build.bat"
			],
			[
				"ass",
				"src\\js\\assets.js"
			],
			[
				"mani",
				"src\\js\\manifest.js"
			],
			[
				"quad",
				"src\\js\\quad.js"
			],
			[
				"mat4",
				"src\\js\\mat4.js"
			],
			[
				"2016",
				"src\\data\\2016.csv"
			],
			[
				"traf",
				"traffic_parser.py"
			],
			[
				"sty",
				"build\\css\\style.css"
			],
			[
				"index",
				"src\\html\\index.html"
			],
			[
				"seri",
				"src\\js\\serialise.js"
			],
			[
				"ava",
				"src\\glsl\\avatar.glsl"
			],
			[
				"camer",
				"src\\js\\camera_locations.js"
			],
			[
				"shader",
				"src\\js\\shader.js"
			],
			[
				"data",
				"src\\js\\data.js"
			],
			[
				"map",
				"src\\js\\map.js"
			],
			[
				"app",
				"src\\js\\app.js"
			],
			[
				"c",
				"camera_locations.js"
			],
			[
				"tr",
				"traffic_parser.py"
			],
			[
				"math",
				"src\\js\\math.js"
			],
			[
				"or",
				"src\\js\\orbit_camera.js"
			],
			[
				"p",
				"parser.py"
			],
			[
				"mesh",
				"src\\js\\mesh.js"
			],
			[
				"webgl",
				"src\\js\\webgl.js"
			],
			[
				"camera",
				"src\\js\\camera.js"
			],
			[
				"lam",
				"src\\glsl\\components\\lambert.glslc"
			],
			[
				"bas",
				"src\\glsl\\basic.glsl"
			],
			[
				"view",
				"src\\js\\view.js"
			],
			[
				"en",
				"src\\js\\entity.js"
			],
			[
				"in",
				"src\\js\\input.js"
			],
			[
				"debug",
				"src\\glsl\\debug.glsl"
			],
			[
				"inde",
				"src\\html\\index.html"
			],
			[
				"man",
				"src\\js\\manifest.js"
			],
			[
				"pro",
				"src\\js\\projection.js"
			],
			[
				"vec",
				"src\\js\\vector.js"
			],
			[
				"shad",
				"src\\js\\shader.js"
			],
			[
				"tex",
				"src\\js\\texture.js"
			],
			[
				"ser",
				"src\\js\\serialise.js"
			],
			[
				"main",
				"src\\js\\main.js"
			],
			[
				"par",
				"parser.py"
			],
			[
				"we",
				"src\\js\\webgl.js"
			],
			[
				"colo",
				"src\\glsl\\components\\colour_normals.glslc"
			],
			[
				"ent",
				"src\\js\\entity.js"
			],
			[
				"basi",
				"src\\glsl\\basic.glsl"
			],
			[
				"gr",
				"src\\glsl\\graph.glsl"
			],
			[
				"time",
				"src\\js\\time.js"
			],
			[
				"input",
				"src\\js\\input.js"
			],
			[
				"draw",
				"src\\glsl\\draw.glsl"
			],
			[
				"gl",
				"src\\js\\gl_draw.js"
			],
			[
				"line",
				"src\\js\\line_mesh3D.js"
			],
			[
				"insta",
				"src\\glsl\\instance.glsl"
			],
			[
				"entit",
				"src\\js\\entity.js"
			],
			[
				"web",
				"src/js/webgl.js"
			],
			[
				"grad",
				"src/glsl/grading.glsl"
			],
			[
				"bu",
				"build.sh"
			],
			[
				"ve",
				"src/js/vector.js"
			],
			[
				"mat",
				"src/js/mat4.js"
			],
			[
				"flat",
				"src/glsl/flat.glsl"
			],
			[
				"css",
				"build/css/style.css"
			],
			[
				"de",
				"src/js/deck.js"
			],
			[
				"sta",
				"src\\js\\stack.js"
			],
			[
				"buil",
				"build.py"
			],
			[
				"py",
				"build.py"
			],
			[
				"text",
				"src\\js\\texture.js"
			],
			[
				"mat2",
				"src\\js\\mat2.js"
			],
			[
				"dec",
				"src\\js\\deck.js"
			],
			[
				"render",
				"src\\js\\webgl\\render_target.js"
			],
			[
				"cir",
				"src\\assets\\circle_mask.glsl"
			],
			[
				"pr",
				"src\\js\\webgl\\projection.js"
			],
			[
				"circ",
				"src\\assets\\circle_mask.glsl"
			],
			[
				"ran",
				"src\\js\\webgl\\random.js"
			],
			[
				"te",
				"src\\js\\webgl\\texture.js"
			],
			[
				"re",
				"src\\js\\webgl\\render_target.js"
			],
			[
				"ene",
				"src\\js\\webgl\\entity.js"
			],
			[
				"html",
				"src\\html\\app.html"
			],
			[
				"str",
				"src\\assets\\striped_circle.glsl"
			],
			[
				"glsl",
				"src\\assets\\basic.glsl"
			],
			[
				"vector",
				"src/js/webgl/vector.js"
			],
			[
				"lines",
				"src/js/webgl/intersect.js"
			],
			[
				"inter",
				"src/js/webgl/intersect.js"
			],
			[
				"deb",
				"src/js/webgl/debug_view.js"
			],
			[
				"lin",
				"src/js/webgl/line_mesh.js"
			],
			[
				"gl_dr",
				"src/js/webgl/gl_draw.js"
			],
			[
				"im",
				"src\\js\\webgl\\image.js"
			],
			[
				"font",
				"src\\js\\webgl\\font.js"
			],
			[
				"gl_draw",
				"src\\js\\webgl\\gl_draw.js"
			],
			[
				"po",
				"src\\js\\webgl\\projection.js"
			],
			[
				"scss",
				"src\\css\\main.scss"
			],
			[
				"rpo",
				"src\\js\\webgl\\projection.js"
			],
			[
				".json",
				"build\\fonts\\open_sans_metrics.json"
			],
			[
				"open",
				"build\\fonts\\open_sans_metrics.json"
			],
			[
				"mes",
				"src\\js\\webgl\\mesh.js"
			],
			[
				"rig",
				"src\\js\\webgl\\rig.js"
			],
			[
				"lap",
				"src\\html\\laptop.html"
			],
			[
				"",
				"build.py"
			],
			[
				"res",
				"src\\css\\_reset.scss"
			],
			[
				"fly",
				"src\\js\\webgl\\fly_cam.js"
			],
			[
				"intro",
				"build\\js\\introduction.js"
			],
			[
				"prim",
				"src\\css\\_prism.scss"
			],
			[
				"get",
				"src\\html\\get-context.html"
			],
			[
				"set",
				"src\\html\\setup.html"
			],
			[
				"la",
				"src\\css\\_layout.scss"
			],
			[
				"ty",
				"src\\css\\_typography.scss"
			],
			[
				"typ",
				"src\\css\\_typography.scss"
			],
			[
				"proj",
				"src\\js\\webgl\\projection.js"
			],
			[
				"int",
				"src\\html\\introduction.html"
			],
			[
				"webg",
				"src\\js\\webgl\\webgl.js"
			],
			[
				"gld",
				"src\\js\\webgl\\gl_draw.js"
			],
			[
				"quat",
				"src\\js\\webgl\\quaternion.js"
			],
			[
				"caera",
				"src\\js\\webgl\\camera.js"
			],
			[
				"stac",
				"src\\js\\webgl\\stack.js"
			],
			[
				"mat3",
				"src\\js\\webgl\\mat3.js"
			],
			[
				"stack",
				"src\\js\\webgl\\stack.js"
			],
			[
				"qu",
				"src\\js\\webgl\\quaternion.js"
			],
			[
				"sader",
				"src\\js\\webgl\\shader.js"
			],
			[
				"q",
				"src\\js\\webgl\\quaternion.js"
			],
			[
				"page",
				"src\\js\\page.js"
			],
			[
				"meshes",
				"src\\html\\meshes.html"
			],
			[
				"con",
				"src\\html\\contents.html"
			],
			[
				"update",
				"src\\html\\update-loop.html"
			],
			[
				"intr",
				"src\\html\\introduction.html"
			],
			[
				"cont",
				"src\\html\\contents.html"
			],
			[
				"gar",
				"src\\html\\garbage-collection.html"
			],
			[
				"shaders",
				"src\\html\\shaders.html"
			],
			[
				"cameras",
				"src\\html\\cameras.html"
			],
			[
				"meh",
				"src\\html\\meshes.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\dev\\msdf\\project.sublime-project"
			]
		],
		"width": 570.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 200.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
